[
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	// Custom keybinds
	// Navigate windows
	{
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
		"when": "editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
		"when": "editorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
		"when": "editorFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
		"when": "editorFocus"
    },
	// Jump paragraph
	{
		"key": "alt+k",    
		"command": "cursorMove",
		"args": {
			"to": "prevBlankLine",
			"select": false
		},
		"when": "editorFocus"
	},
	{
		"key": "alt+j",
		"command": "cursorMove",
		"args": {
			"to": "nextBlankLine",
			"select": false
		},
		"when": "editorFocus"
	},
	// Insert line above/belowe
	{
        "key": "alt+o",
        "command": "editor.action.insertLineBefore",
		"when": "editorFocus"
	},
	{
        "key": "alt+i",
        "command": "editor.action.insertLineAfter",
		"when": "editorFocus"
	},
	{
        "key": "shift+w",
        "command": "workbench.action.files.save",
		"when": "editorFocus && vim.active && vim.mode == 'Normal'"
	},
	{
		"key": "alt+0",
		"command": "workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+alt+t",
		"command": "platformio-ide.newTerminal"
	},
	{
		"key": "ctrl+n",
		// "command": "workbench.action.terminal.newInActiveWorkspace"
		"command": "workbench.action.terminal.newWithCwd",
		"args": {
			"cwd": "${fileDirname}"
  }
	},
	{
		"key": "ctrl+alt+n",
		"command": "workbench.action.terminal.new"
	},
	{
		"key": "ctrl+alt+b",
		"command": "platformio-ide.build"
	},
	{
		"key": "ctrl+alt+b",
		"command": "workbench.action.terminal.sendSequence",
		"args": {
			"text": "apio build\n"
		},
		"when": "editorLangID == Verilog"
	},
	{
		"key": "ctrl+alt+u",
		"command": "workbench.action.terminal.sendSequence",
		"args": {
			"text": "apio upload\n"
		},
		"when": "editorLangID == verilog"
	},
	{
		"key": "ctrl+alt+u",
		"command": "platformio-ide.upload"
	}
]